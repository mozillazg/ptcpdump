name: docker-dev-image

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_dispatch:
  push:
    branches:
      - 'dev-docker'

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: quay.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: 'ptcpdump/develop'


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3.9.0
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.QUAY_USER }}
          password: ${{ secrets.QUAY_PASSWD }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: generate tag name
        run: |
          echo "TAG_NAME=$(date +'%Y%m%d.%H%M%S')" >> $GITHUB_ENV

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image (no latest tag)
        id: build-and-push
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # v6.13.0
        with:
          context: .
          file: .github/build.Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          # platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_NAME }}'
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: test image
        run: |
          set -xe

          IMAGE='${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_NAME }}'

          docker run --rm -v `pwd`:/app "${IMAGE}" make build-bpf
          docker run --rm -v `pwd`:/app "${IMAGE}" make build

          ./ptcpdump --version

          git status


      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image (latest tag)
        id: build-and-push-latest
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # v6.13.0
        with:
          context: .
          file: .github/build.Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          # platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest'
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

